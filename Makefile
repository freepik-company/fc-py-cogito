.PHONY: all help

PYTHON_VERSION ?= 3.10

all: help

check-uv:
	@uv version || (echo "Please install uv using: make build-install-uv" && exit 1)

.venv: check-uv ## Create the virtual environment
	@uv venv --python $(PYTHON_VERSION)

build: .venv dependencies-install ## Build the local development environment

help: ## Autogenerated list of commands
	@echo "Usage: make [command]"
	@echo
	@echo "Commands:"
	@echo
	@grep -E '^[0-9a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-32s\033[0m %s\n", $$1, $$2}'

git-prune: ## Prune the git repository
	@git branch --format '%(refname:short) %(upstream:track)' | \
		grep -E '\[gone\]|\[desaparecido\]' | \
		awk '{print $$1}' > .branches_to_delete
	@vim .branches_to_delete
	@if [ -s .branches_to_delete ]; then \
		echo "Deleting selected branches..."; \
		cat .branches_to_delete | xargs -I {} git branch -D {}; \
	else \
		echo "No branches were selected for deletion."; \
	fi
	@rm .branches_to_delete

dependencies-compile: ## Compile the dependencies
	@. .venv/bin/activate && uv pip compile --universal -o requirements.txt --no-deps pyproject.toml

dependencies-install: ## Install the dependencies
	@. .venv/bin/activate && uv sync

code-style-dirty: ## Check the code style but don't commit
	@. .venv/bin/activate && uv black --check .

code-style: code-style-dirty ## Check the code style and commit the changes
